{
  "android": {
    "net": {
      "wifi": {
        "WifiSsid": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#CREATOR"
          },
          "NONE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#NONE"
          },
          "createFromHex": {
            "!type": "fn(hexStr: string) -> +android.net.wifi.WifiSsid",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#createFromHex(java.lang.String)"
          },
          "createFromAsciiEncoded": {
            "!type": "fn(asciiEncoded: string) -> +android.net.wifi.WifiSsid",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#createFromAsciiEncoded(java.lang.String)"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "isHidden": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#isHidden()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#describeContents()"
            },
            "getHexString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#getHexString()"
            },
            "getOctets": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#getOctets()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiSsid.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "WifiLinkLayerStats": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiLinkLayerStats.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiLinkLayerStats.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiLinkLayerStats.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiLinkLayerStats.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getPrintableSsid": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiLinkLayerStats.html#getPrintableSsid()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiLinkLayerStats.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "WpsInfo": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#CREATOR"
          },
          "KEYPAD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#KEYPAD"
          },
          "LABEL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#LABEL"
          },
          "INVALID": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#INVALID"
          },
          "DISPLAY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#DISPLAY"
          },
          "PBC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#PBC"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "WifiEnterpriseConfig": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html",
          "!type": "fn()",
          "Eap": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html",
            "PEAP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#PEAP"
            },
            "PWD": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#PWD"
            },
            "TLS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#TLS"
            },
            "AKA": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#AKA"
            },
            "TTLS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#TTLS"
            },
            "SIM": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#SIM"
            },
            "NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#NONE"
            },
            "AKA_PRIME": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#AKA_PRIME"
            },
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html#strings"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "Phase2": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html",
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html#strings"
            },
            "MSCHAPV2": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html#MSCHAPV2"
            },
            "GTC": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html#GTC"
            },
            "PAP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html#PAP"
            },
            "MSCHAP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html#MSCHAP"
            },
            "NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html#NONE"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "CLIENT_CERT_PREFIX": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#CLIENT_CERT_PREFIX"
          },
          "PASSWORD_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#PASSWORD_KEY"
          },
          "PRIVATE_KEY_ID_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#PRIVATE_KEY_ID_KEY"
          },
          "SUBJECT_MATCH_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#SUBJECT_MATCH_KEY"
          },
          "ALTSUBJECT_MATCH_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#ALTSUBJECT_MATCH_KEY"
          },
          "CA_CERT_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#CA_CERT_KEY"
          },
          "ENGINE_ID_KEYSTORE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#ENGINE_ID_KEYSTORE"
          },
          "EMPTY_VALUE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#EMPTY_VALUE"
          },
          "REALM_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#REALM_KEY"
          },
          "PLMN_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#PLMN_KEY"
          },
          "ENGINE_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#ENGINE_KEY"
          },
          "DOM_SUFFIX_MATCH_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#DOM_SUFFIX_MATCH_KEY"
          },
          "PHASE2_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#PHASE2_KEY"
          },
          "CLIENT_CERT_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#CLIENT_CERT_KEY"
          },
          "KEYSTORE_URI": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#KEYSTORE_URI"
          },
          "ENGINE_DISABLE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#ENGINE_DISABLE"
          },
          "IDENTITY_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#IDENTITY_KEY"
          },
          "EAP_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#EAP_KEY"
          },
          "OPP_KEY_CACHING": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#OPP_KEY_CACHING"
          },
          "ENGINE_ID_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#ENGINE_ID_KEY"
          },
          "ANON_IDENTITY_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#ANON_IDENTITY_KEY"
          },
          "ENGINE_ENABLE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#ENGINE_ENABLE"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#CREATOR"
          },
          "CA_CERT_PREFIX": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#CA_CERT_PREFIX"
          },
          "prototype": {
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#describeContents()"
            },
            "setCaCertificateAlias": {
              "!type": "fn(alias: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setCaCertificateAlias(java.lang.String)"
            },
            "getPhase2Method": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getPhase2Method()"
            },
            "setClientKeyEntry": {
              "!type": "fn(privateKey: +java.security.PrivateKey, clientCertificate: +java.security.cert.X509Certificate) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setClientKeyEntry(java.security.PrivateKey, java.security.cert.X509Certificate)"
            },
            "setClientCertificateAlias": {
              "!type": "fn(alias: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setClientCertificateAlias(java.lang.String)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#toString()"
            },
            "resetClientKeyEntry": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#resetClientKeyEntry()"
            },
            "getCaCertificate": {
              "!type": "fn() -> +java.security.cert.X509Certificate",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getCaCertificate()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "resetCaCertificate": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#resetCaCertificate()"
            },
            "getPlmn": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getPlmn()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClientCertificate": {
              "!type": "fn() -> +java.security.cert.X509Certificate",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getClientCertificate()"
            },
            "getSubjectMatch": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getSubjectMatch()"
            },
            "setPlmn": {
              "!type": "fn(plmn: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setPlmn(java.lang.String)"
            },
            "setFieldValue": {
              "!type": "fn(key: string, value: string, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setFieldValue(java.lang.String, java.lang.String, java.lang.String)"
            },
            "getAltSubjectMatch": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getAltSubjectMatch()"
            },
            "getDomainSuffixMatch": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getDomainSuffixMatch()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getAnonymousIdentity": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getAnonymousIdentity()"
            },
            "getEapMethod": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getEapMethod()"
            },
            "setPhase2Method": {
              "!type": "fn(phase2Method: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setPhase2Method(int)"
            },
            "getClientPrivateKey": {
              "!type": "fn() -> +java.security.PrivateKey",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getClientPrivateKey()"
            },
            "getClientCertificateAlias": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getClientCertificateAlias()"
            },
            "getCaCertificateAlias": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getCaCertificateAlias()"
            },
            "getPassword": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getPassword()"
            },
            "setRealm": {
              "!type": "fn(realm: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setRealm(java.lang.String)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setAltSubjectMatch": {
              "!type": "fn(altSubjectMatch: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setAltSubjectMatch(java.lang.String)"
            },
            "getRealm": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getRealm()"
            },
            "setSubjectMatch": {
              "!type": "fn(subjectMatch: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setSubjectMatch(java.lang.String)"
            },
            "getFields": {
              "!type": "fn() -> +java.util.HashMap",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getFields()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#writeToParcel(android.os.Parcel, int)"
            },
            "setCaCertificate": {
              "!type": "fn(cert: +java.security.cert.X509Certificate) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setCaCertificate(java.security.cert.X509Certificate)"
            },
            "getIdentity": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getIdentity()"
            },
            "setPassword": {
              "!type": "fn(password: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setPassword(java.lang.String)"
            },
            "setEapMethod": {
              "!type": "fn(eapMethod: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setEapMethod(int)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getFieldValue": {
              "!type": "fn(key: string, prefix: string) -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#getFieldValue(java.lang.String, java.lang.String)"
            },
            "setDomainSuffixMatch": {
              "!type": "fn(domain: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setDomainSuffixMatch(java.lang.String)"
            },
            "setIdentity": {
              "!type": "fn(identity: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setIdentity(java.lang.String)"
            },
            "setAnonymousIdentity": {
              "!type": "fn(anonymousIdentity: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html#setAnonymousIdentity(java.lang.String)"
            }
          }
        },
        "WifiChannel": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiChannel.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiChannel.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiChannel.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiChannel.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "isValid": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiChannel.html#isValid()"
            }
          }
        },
        "ScanSettings": {
          "!url": "http://developer.android.com/reference/android/net/wifi/ScanSettings.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanSettings.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanSettings.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanSettings.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "isValid": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanSettings.html#isValid()"
            }
          }
        },
        "WifiConfiguration": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html",
          "!type": "fn()",
          "KeyMgmt": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html",
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html#strings"
            },
            "WPA2_PSK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html#WPA2_PSK"
            },
            "WPA_EAP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html#WPA_EAP"
            },
            "IEEE8021X": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html#IEEE8021X"
            },
            "NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html#NONE"
            },
            "varName": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html#varName"
            },
            "WPA_PSK": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html#WPA_PSK"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "Protocol": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Protocol.html",
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Protocol.html#strings"
            },
            "RSN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Protocol.html#RSN"
            },
            "varName": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Protocol.html#varName"
            },
            "WPA": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Protocol.html#WPA"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "AuthAlgorithm": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html",
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html#strings"
            },
            "LEAP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html#LEAP"
            },
            "SHARED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html#SHARED"
            },
            "OPEN": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html#OPEN"
            },
            "varName": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html#varName"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "PairwiseCipher": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html",
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html#strings"
            },
            "CCMP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html#CCMP"
            },
            "TKIP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html#TKIP"
            },
            "NONE": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html#NONE"
            },
            "varName": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html#varName"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "GroupCipher": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html",
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html#strings"
            },
            "CCMP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html#CCMP"
            },
            "WEP104": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html#WEP104"
            },
            "WEP40": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html#WEP40"
            },
            "TKIP": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html#TKIP"
            },
            "varName": {
              "!type": "string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html#varName"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "Status": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Status.html",
            "strings": {
              "!type": "+java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Status.html#strings"
            },
            "DISABLED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Status.html#DISABLED"
            },
            "CURRENT": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Status.html#CURRENT"
            },
            "ENABLED": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Status.html#ENABLED"
            },
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "Visibility": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Visibility.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.Visibility.html#toString()"
              }
            }
          },
          "HOME_NETWORK_RSSI_BOOST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#HOME_NETWORK_RSSI_BOOST"
          },
          "INITIAL_AUTO_JOIN_ATTEMPT_MIN_5": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#INITIAL_AUTO_JOIN_ATTEMPT_MIN_5"
          },
          "UNBLACKLIST_THRESHOLD_24_HARD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNBLACKLIST_THRESHOLD_24_HARD"
          },
          "UNWANTED_BLACKLIST_SOFT_RSSI_24": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNWANTED_BLACKLIST_SOFT_RSSI_24"
          },
          "AUTO_JOIN_DELETED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_DELETED"
          },
          "UNBLACKLIST_THRESHOLD_5_SOFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNBLACKLIST_THRESHOLD_5_SOFT"
          },
          "BAD_RSSI_24": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#BAD_RSSI_24"
          },
          "LOW_RSSI_5": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#LOW_RSSI_5"
          },
          "INITIAL_AUTO_JOIN_ATTEMPT_MIN_24": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#INITIAL_AUTO_JOIN_ATTEMPT_MIN_24"
          },
          "hiddenSSIDVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#hiddenSSIDVarName"
          },
          "USER_UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#USER_UNSPECIFIED"
          },
          "MAX_INITIAL_AUTO_JOIN_RSSI_BOOST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#MAX_INITIAL_AUTO_JOIN_RSSI_BOOST"
          },
          "DISABLED_DHCP_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#DISABLED_DHCP_FAILURE"
          },
          "updateIdentiferVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#updateIdentiferVarName"
          },
          "GOOD_RSSI_5": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#GOOD_RSSI_5"
          },
          "USER_APPROVED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#USER_APPROVED"
          },
          "UNWANTED_BLACKLIST_SOFT_BUMP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNWANTED_BLACKLIST_SOFT_BUMP"
          },
          "UNWANTED_BLACKLIST_HARD_BUMP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNWANTED_BLACKLIST_HARD_BUMP"
          },
          "UNWANTED_BLACKLIST_SOFT_RSSI_5": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNWANTED_BLACKLIST_SOFT_RSSI_5"
          },
          "INVALID_RSSI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#INVALID_RSSI"
          },
          "AUTO_JOIN_ENABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_ENABLED"
          },
          "AUTO_JOIN_TEMPORARY_DISABLED_AT_SUPPLICANT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_TEMPORARY_DISABLED_AT_SUPPLICANT"
          },
          "AUTO_JOIN_DISABLED_NO_CREDENTIALS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_DISABLED_NO_CREDENTIALS"
          },
          "USER_BANNED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#USER_BANNED"
          },
          "DISABLED_AUTH_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#DISABLED_AUTH_FAILURE"
          },
          "UNBLACKLIST_THRESHOLD_5_HARD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNBLACKLIST_THRESHOLD_5_HARD"
          },
          "USER_PENDING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#USER_PENDING"
          },
          "G_BAND_PREFERENCE_RSSI_THRESHOLD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#G_BAND_PREFERENCE_RSSI_THRESHOLD"
          },
          "wepTxKeyIdxVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#wepTxKeyIdxVarName"
          },
          "DISABLED_DNS_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#DISABLED_DNS_FAILURE"
          },
          "ROAMING_FAILURE_AUTH_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#ROAMING_FAILURE_AUTH_FAILURE"
          },
          "LOW_RSSI_24": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#LOW_RSSI_24"
          },
          "INVALID_NETWORK_ID": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#INVALID_NETWORK_ID"
          },
          "BAD_RSSI_5": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#BAD_RSSI_5"
          },
          "AUTO_JOIN_DISABLED_ON_AUTH_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_DISABLED_ON_AUTH_FAILURE"
          },
          "UNBLACKLIST_THRESHOLD_24_SOFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNBLACKLIST_THRESHOLD_24_SOFT"
          },
          "bssidVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#bssidVarName"
          },
          "wepKeyVarNames": {
            "!type": "+java.newArray",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#wepKeyVarNames"
          },
          "AUTO_JOIN_TEMPORARY_DISABLED_LINK_ERRORS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_TEMPORARY_DISABLED_LINK_ERRORS"
          },
          "AUTO_JOIN_DISABLED_USER_ACTION": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_DISABLED_USER_ACTION"
          },
          "UNKNOWN_UID": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#UNKNOWN_UID"
          },
          "priorityVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#priorityVarName"
          },
          "ROAMING_FAILURE_IP_CONFIG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#ROAMING_FAILURE_IP_CONFIG"
          },
          "AUTO_JOIN_TEMPORARY_DISABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#AUTO_JOIN_TEMPORARY_DISABLED"
          },
          "DISABLED_UNKNOWN_REASON": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#DISABLED_UNKNOWN_REASON"
          },
          "DISABLED_ASSOCIATION_REJECT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#DISABLED_ASSOCIATION_REJECT"
          },
          "A_BAND_PREFERENCE_RSSI_THRESHOLD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#A_BAND_PREFERENCE_RSSI_THRESHOLD"
          },
          "pskVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#pskVarName"
          },
          "ssidVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#ssidVarName"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#CREATOR"
          },
          "pmfVarName": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#pmfVarName"
          },
          "DISABLED_BY_WIFI_MANAGER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#DISABLED_BY_WIFI_MANAGER"
          },
          "GOOD_RSSI_24": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#GOOD_RSSI_24"
          },
          "userApprovedAsString": {
            "!type": "fn(userApproved: number) -> string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#userApprovedAsString(int)"
          },
          "configKey": {
            "!type": "fn(result: +android.net.wifi.ScanResult) -> string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#configKey(android.net.wifi.ScanResult)"
          },
          "prototype": {
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#writeToParcel(android.os.Parcel, int)"
            },
            "getIpConfiguration": {
              "!type": "fn() -> +android.net.IpConfiguration",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getIpConfiguration()"
            },
            "isPasspoint": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#isPasspoint()"
            },
            "getIpAssignment": {
              "!type": "fn() -> +android.net.IpConfiguration.IpAssignment",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getIpAssignment()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setProxy": {
              "!type": "fn(settings: +android.net.IpConfiguration.ProxySettings, proxy: +android.net.ProxyInfo) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setProxy(android.net.IpConfiguration.ProxySettings, android.net.ProxyInfo)"
            },
            "getProxySettings": {
              "!type": "fn() -> +android.net.IpConfiguration.ProxySettings",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getProxySettings()"
            },
            "setIpAssignment": {
              "!type": "fn(ipAssignment: +android.net.IpConfiguration.IpAssignment) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setIpAssignment(android.net.IpConfiguration.IpAssignment)"
            },
            "isEnterprise": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#isEnterprise()"
            },
            "getKeyIdForCredentials": {
              "!type": "fn(current: +android.net.wifi.WifiConfiguration) -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getKeyIdForCredentials(android.net.wifi.WifiConfiguration)"
            },
            "isLinked": {
              "!type": "fn(config: +android.net.wifi.WifiConfiguration) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#isLinked(android.net.wifi.WifiConfiguration)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#describeContents()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setProxySettings": {
              "!type": "fn(proxySettings: +android.net.IpConfiguration.ProxySettings) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setProxySettings(android.net.IpConfiguration.ProxySettings)"
            },
            "setStaticIpConfiguration": {
              "!type": "fn(staticIpConfiguration: +android.net.StaticIpConfiguration) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setStaticIpConfiguration(android.net.StaticIpConfiguration)"
            },
            "getPrintableSsid": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getPrintableSsid()"
            },
            "setVisibility": {
              "!type": "fn(status: +android.net.wifi.WifiConfiguration.Visibility) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setVisibility(android.net.wifi.WifiConfiguration.Visibility)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#toString()"
            },
            "getAuthType": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getAuthType()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "hasNoInternetAccess": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#hasNoInternetAccess()"
            },
            "setAutoJoinStatus": {
              "!type": "fn(status: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setAutoJoinStatus(int)"
            },
            "getStaticIpConfiguration": {
              "!type": "fn() -> +android.net.StaticIpConfiguration",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getStaticIpConfiguration()"
            },
            "configKey": {
              "!type": "fn(allowCached: bool) -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#configKey(boolean)"
            },
            "getHttpProxy": {
              "!type": "fn() -> +android.net.ProxyInfo",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#getHttpProxy()"
            },
            "setIpConfiguration": {
              "!type": "fn(ipConfiguration: +android.net.IpConfiguration) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setIpConfiguration(android.net.IpConfiguration)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "setHttpProxy": {
              "!type": "fn(httpProxy: +android.net.ProxyInfo) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConfiguration.html#setHttpProxy(android.net.ProxyInfo)"
            }
          }
        },
        "WifiInfo": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#CREATOR"
          },
          "INVALID_RSSI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#INVALID_RSSI"
          },
          "FREQUENCY_UNITS": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#FREQUENCY_UNITS"
          },
          "LINK_SPEED_UNITS": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#LINK_SPEED_UNITS"
          },
          "DEFAULT_MAC_ADDRESS": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#DEFAULT_MAC_ADDRESS"
          },
          "MIN_RSSI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#MIN_RSSI"
          },
          "MAX_RSSI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#MAX_RSSI"
          },
          "removeDoubleQuotes": {
            "!type": "fn(string: string) -> string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#removeDoubleQuotes(java.lang.String)"
          },
          "getDetailedStateOf": {
            "!type": "fn(suppState: +android.net.wifi.SupplicantState) -> +android.net.NetworkInfo.DetailedState",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getDetailedStateOf(android.net.wifi.SupplicantState)"
          },
          "prototype": {
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#describeContents()"
            },
            "updatePacketRates": {
              "!type": "fn(stats: +android.net.wifi.WifiLinkLayerStats) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#updatePacketRates(android.net.wifi.WifiLinkLayerStats)"
            },
            "getBSSID": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getBSSID()"
            },
            "setSupplicantState": {
              "!type": "fn(state: +android.net.wifi.SupplicantState) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setSupplicantState(android.net.wifi.SupplicantState)"
            },
            "getMacAddress": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getMacAddress()"
            },
            "getFrequency": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getFrequency()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#toString()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setNetworkId": {
              "!type": "fn(id: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setNetworkId(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "is24GHz": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#is24GHz()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getIpAddress": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getIpAddress()"
            },
            "setEphemeral": {
              "!type": "fn(ephemeral: bool) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setEphemeral(boolean)"
            },
            "getRssi": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getRssi()"
            },
            "getLinkSpeed": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getLinkSpeed()"
            },
            "setRssi": {
              "!type": "fn(rssi: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setRssi(int)"
            },
            "setMeteredHint": {
              "!type": "fn(meteredHint: bool) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setMeteredHint(boolean)"
            },
            "is5GHz": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#is5GHz()"
            },
            "setMacAddress": {
              "!type": "fn(macAddress: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setMacAddress(java.lang.String)"
            },
            "getSSID": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getSSID()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setSSID": {
              "!type": "fn(wifiSsid: +android.net.wifi.WifiSsid) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setSSID(android.net.wifi.WifiSsid)"
            },
            "setFrequency": {
              "!type": "fn(frequency: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setFrequency(int)"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "getNetworkId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getNetworkId()"
            },
            "getMeteredHint": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getMeteredHint()"
            },
            "reset": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#reset()"
            },
            "getSupplicantState": {
              "!type": "fn() -> +android.net.wifi.SupplicantState",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getSupplicantState()"
            },
            "setInetAddress": {
              "!type": "fn(address: +java.net.InetAddress) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setInetAddress(java.net.InetAddress)"
            },
            "setLinkSpeed": {
              "!type": "fn(linkSpeed: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setLinkSpeed(int)"
            },
            "getWifiSsid": {
              "!type": "fn() -> +android.net.wifi.WifiSsid",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getWifiSsid()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "isEphemeral": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#isEphemeral()"
            },
            "getHiddenSSID": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#getHiddenSSID()"
            },
            "setBSSID": {
              "!type": "fn(BSSID: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiInfo.html#setBSSID(java.lang.String)"
            }
          }
        },
        "SupplicantState": {
          "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html",
          "DISCONNECTED": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#DISCONNECTED"
          },
          "ASSOCIATED": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#ASSOCIATED"
          },
          "INVALID": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#INVALID"
          },
          "DORMANT": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#DORMANT"
          },
          "AUTHENTICATING": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#AUTHENTICATING"
          },
          "INACTIVE": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#INACTIVE"
          },
          "GROUP_HANDSHAKE": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#GROUP_HANDSHAKE"
          },
          "INTERFACE_DISABLED": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#INTERFACE_DISABLED"
          },
          "ASSOCIATING": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#ASSOCIATING"
          },
          "UNINITIALIZED": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#UNINITIALIZED"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#CREATOR"
          },
          "COMPLETED": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#COMPLETED"
          },
          "SCANNING": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#SCANNING"
          },
          "FOUR_WAY_HANDSHAKE": {
            "!type": "+android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#FOUR_WAY_HANDSHAKE"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.net.wifi.SupplicantState",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "isConnecting": {
            "!type": "fn(state: +android.net.wifi.SupplicantState) -> bool",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#isConnecting(android.net.wifi.SupplicantState)"
          },
          "isHandshakeState": {
            "!type": "fn(state: +android.net.wifi.SupplicantState) -> bool",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#isHandshakeState(android.net.wifi.SupplicantState)"
          },
          "isDriverActive": {
            "!type": "fn(state: +android.net.wifi.SupplicantState) -> bool",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#isDriverActive(android.net.wifi.SupplicantState)"
          },
          "isValidState": {
            "!type": "fn(state: +android.net.wifi.SupplicantState) -> bool",
            "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#isValidState(android.net.wifi.SupplicantState)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#describeContents()"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/SupplicantState.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "WifiScanner": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html",
          "!type": "fn(context: +android.content.Context, service: IWifiScanner)",
          "ChannelSpec": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ChannelSpec.html",
            "!type": "fn(frequency: number)",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "ScanSettings": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanSettings.html",
            "!type": "fn()",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanSettings.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanSettings.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanSettings.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "ScanData": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanData.html",
            "!type": "fn(id: number, flags: number, results: +java.newArray)",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanData.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getResults": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanData.html#getResults()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "getId": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanData.html#getId()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanData.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanData.html#writeToParcel(android.os.Parcel, int)"
              },
              "getFlags": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ScanData.html#getFlags()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "ParcelableScanData": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanData.html",
            "!type": "fn(results: +java.newArray)",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanData.html#CREATOR"
            },
            "prototype": {
              "getResults": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanData.html#getResults()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanData.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanData.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "ParcelableScanResults": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanResults.html",
            "!type": "fn(results: +java.newArray)",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanResults.html#CREATOR"
            },
            "prototype": {
              "getResults": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanResults.html#getResults()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanResults.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.ParcelableScanResults.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "BssidInfo": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.BssidInfo.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "WifiChangeSettings": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.WifiChangeSettings.html",
            "!type": "fn()",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.WifiChangeSettings.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.WifiChangeSettings.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.WifiChangeSettings.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "HotlistSettings": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.HotlistSettings.html",
            "!type": "fn()",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.HotlistSettings.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.HotlistSettings.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.HotlistSettings.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "OperationResult": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.OperationResult.html",
            "!type": "fn(reason: number, description: string)",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.OperationResult.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.OperationResult.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.OperationResult.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "REASON_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REASON_SUCCEEDED"
          },
          "REPORT_EVENT_NO_BATCH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REPORT_EVENT_NO_BATCH"
          },
          "CMD_STOP_TRACKING_CHANGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_STOP_TRACKING_CHANGE"
          },
          "CMD_SINGLE_SCAN_COMPLETED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_SINGLE_SCAN_COMPLETED"
          },
          "CMD_SCAN_RESULT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_SCAN_RESULT"
          },
          "CMD_PERIOD_CHANGED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_PERIOD_CHANGED"
          },
          "CMD_AP_LOST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_AP_LOST"
          },
          "CMD_START_SINGLE_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_START_SINGLE_SCAN"
          },
          "WIFI_BAND_BOTH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#WIFI_BAND_BOTH"
          },
          "WIFI_BAND_5_GHZ_DFS_ONLY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#WIFI_BAND_5_GHZ_DFS_ONLY"
          },
          "CMD_OP_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_OP_FAILED"
          },
          "MIN_SCAN_PERIOD_MS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#MIN_SCAN_PERIOD_MS"
          },
          "WIFI_BAND_5_GHZ_WITH_DFS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#WIFI_BAND_5_GHZ_WITH_DFS"
          },
          "CMD_START_BACKGROUND_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_START_BACKGROUND_SCAN"
          },
          "REPORT_EVENT_AFTER_EACH_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REPORT_EVENT_AFTER_EACH_SCAN"
          },
          "CMD_CONFIGURE_WIFI_CHANGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_CONFIGURE_WIFI_CHANGE"
          },
          "CMD_SET_HOTLIST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_SET_HOTLIST"
          },
          "REASON_INVALID_REQUEST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REASON_INVALID_REQUEST"
          },
          "MAX_SCAN_PERIOD_MS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#MAX_SCAN_PERIOD_MS"
          },
          "WIFI_BAND_BOTH_WITH_DFS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#WIFI_BAND_BOTH_WITH_DFS"
          },
          "REPORT_EVENT_AFTER_BUFFER_FULL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REPORT_EVENT_AFTER_BUFFER_FULL"
          },
          "REPORT_EVENT_FULL_SCAN_RESULT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REPORT_EVENT_FULL_SCAN_RESULT"
          },
          "WIFI_BAND_24_GHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#WIFI_BAND_24_GHZ"
          },
          "CMD_STOP_BACKGROUND_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_STOP_BACKGROUND_SCAN"
          },
          "CMD_WIFI_CHANGES_STABILIZED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_WIFI_CHANGES_STABILIZED"
          },
          "WIFI_BAND_UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#WIFI_BAND_UNSPECIFIED"
          },
          "REASON_INVALID_LISTENER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REASON_INVALID_LISTENER"
          },
          "CMD_START_TRACKING_CHANGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_START_TRACKING_CHANGE"
          },
          "GET_AVAILABLE_CHANNELS_EXTRA": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#GET_AVAILABLE_CHANNELS_EXTRA"
          },
          "REASON_UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REASON_UNSPECIFIED"
          },
          "REASON_NOT_AUTHORIZED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#REASON_NOT_AUTHORIZED"
          },
          "CMD_WIFI_CHANGE_DETECTED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_WIFI_CHANGE_DETECTED"
          },
          "CMD_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_SCAN"
          },
          "CMD_RESET_HOTLIST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_RESET_HOTLIST"
          },
          "WIFI_BAND_5_GHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#WIFI_BAND_5_GHZ"
          },
          "CMD_AP_FOUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_AP_FOUND"
          },
          "CMD_STOP_SINGLE_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_STOP_SINGLE_SCAN"
          },
          "CMD_OP_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_OP_SUCCEEDED"
          },
          "CMD_FULL_SCAN_RESULT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_FULL_SCAN_RESULT"
          },
          "CMD_GET_SCAN_RESULTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#CMD_GET_SCAN_RESULTS"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "configureWifiChange": {
              "!type": "fn(rssiSampleSize: number, lostApSampleSize: number, unchangedSampleSize: number, minApsBreachingThreshold: number, periodInMs: number, bssidInfos: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#configureWifiChange(int, int, int, int, int, android.net.wifi.WifiScanner.BssidInfo[])"
            },
            "stopBackgroundScan": {
              "!type": "fn(listener: +android.net.wifi.WifiScanner.ScanListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#stopBackgroundScan(android.net.wifi.WifiScanner.ScanListener)"
            },
            "startBackgroundScan": {
              "!type": "fn(settings: +android.net.wifi.WifiScanner.ScanSettings, listener: +android.net.wifi.WifiScanner.ScanListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#startBackgroundScan(android.net.wifi.WifiScanner.ScanSettings, android.net.wifi.WifiScanner.ScanListener)"
            },
            "getScanResults": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#getScanResults()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "stopScan": {
              "!type": "fn(listener: +android.net.wifi.WifiScanner.ScanListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#stopScan(android.net.wifi.WifiScanner.ScanListener)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "startTrackingWifiChange": {
              "!type": "fn(listener: +android.net.wifi.WifiScanner.WifiChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#startTrackingWifiChange(android.net.wifi.WifiScanner.WifiChangeListener)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "startScan": {
              "!type": "fn(settings: +android.net.wifi.WifiScanner.ScanSettings, listener: +android.net.wifi.WifiScanner.ScanListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#startScan(android.net.wifi.WifiScanner.ScanSettings, android.net.wifi.WifiScanner.ScanListener)"
            },
            "stopTrackingBssids": {
              "!type": "fn(listener: +android.net.wifi.WifiScanner.BssidListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#stopTrackingBssids(android.net.wifi.WifiScanner.BssidListener)"
            },
            "getAvailableChannels": {
              "!type": "fn(band: number) -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#getAvailableChannels(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "stopTrackingWifiChange": {
              "!type": "fn(listener: +android.net.wifi.WifiScanner.WifiChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#stopTrackingWifiChange(android.net.wifi.WifiScanner.WifiChangeListener)"
            },
            "startTrackingBssids": {
              "!type": "fn(bssidInfos: +java.newArray, apLostThreshold: number, listener: +android.net.wifi.WifiScanner.BssidListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiScanner.html#startTrackingBssids(android.net.wifi.WifiScanner.BssidInfo[], int, android.net.wifi.WifiScanner.BssidListener)"
            }
          }
        },
        "WifiConnectionStatistics": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiConnectionStatistics.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiConnectionStatistics.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "incrementOrAddUntrusted": {
              "!type": "fn(SSID: string, connection: number, usage: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConnectionStatistics.html#incrementOrAddUntrusted(java.lang.String, int, int)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConnectionStatistics.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConnectionStatistics.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiConnectionStatistics.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "WpsResult": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.html",
          "!type": "fn()",
          "Status": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.Status.html",
            "SUCCESS": {
              "!type": "+android.net.wifi.WpsResult.Status",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.Status.html#SUCCESS"
            },
            "FAILURE": {
              "!type": "+android.net.wifi.WpsResult.Status",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.Status.html#FAILURE"
            },
            "IN_PROGRESS": {
              "!type": "+android.net.wifi.WpsResult.Status",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.Status.html#IN_PROGRESS"
            },
            "valueOf": {
              "!type": "fn(name: string) -> +android.net.wifi.WpsResult.Status",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.Status.html#valueOf(java.lang.String)"
            },
            "values": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.Status.html#values()"
            },
            "getSharedConstants": {
              "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
            },
            "prototype": {
              "name": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
              },
              "equals": {
                "!type": "fn(other: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
              },
              "compareTo": {
                "!type": "fn(o: +java.lang.Enum) -> number",
                "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "getDeclaringClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
              },
              "ordinal": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WpsResult.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "RssiPacketCountInfo": {
          "!url": "http://developer.android.com/reference/android/net/wifi/RssiPacketCountInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/RssiPacketCountInfo.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/RssiPacketCountInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/RssiPacketCountInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "BatchedScanResult": {
          "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanResult.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanResult.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanResult.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanResult.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanResult.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ScanResult": {
          "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html",
          "!type": "fn(wifiSsid: +android.net.wifi.WifiSsid, BSSID: string, caps: string, level: number, frequency: number, tsf: +java.lang.Long)",
          "InformationElement": {
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.InformationElement.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "CHANNEL_WIDTH_40MHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#CHANNEL_WIDTH_40MHZ"
          },
          "CHANNEL_WIDTH_80MHZ_PLUS_MHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#CHANNEL_WIDTH_80MHZ_PLUS_MHZ"
          },
          "CHANNEL_WIDTH_20MHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#CHANNEL_WIDTH_20MHZ"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#CREATOR"
          },
          "UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#UNSPECIFIED"
          },
          "AUTO_JOIN_DISABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#AUTO_JOIN_DISABLED"
          },
          "FLAG_PASSPOINT_NETWORK": {
            "!type": "+java.lang.Long",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#FLAG_PASSPOINT_NETWORK"
          },
          "FLAG_80211mc_RESPONDER": {
            "!type": "+java.lang.Long",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#FLAG_80211mc_RESPONDER"
          },
          "AUTHENTICATION_ERROR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#AUTHENTICATION_ERROR"
          },
          "CHANNEL_WIDTH_160MHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#CHANNEL_WIDTH_160MHZ"
          },
          "AUTO_ROAM_DISABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#AUTO_ROAM_DISABLED"
          },
          "CHANNEL_WIDTH_80MHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#CHANNEL_WIDTH_80MHZ"
          },
          "ENABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#ENABLED"
          },
          "is5GHz": {
            "!type": "fn(freq: number) -> bool",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#is5GHz(int)"
          },
          "is24GHz": {
            "!type": "fn(freq: number) -> bool",
            "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#is24GHz(int)"
          },
          "prototype": {
            "clearFlag": {
              "!type": "fn(flag: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#clearFlag(long)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#describeContents()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#toString()"
            },
            "setFlag": {
              "!type": "fn(flag: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#setFlag(long)"
            },
            "is80211mcResponder": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#is80211mcResponder()"
            },
            "is24GHz": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#is24GHz()"
            },
            "setAutoJoinStatus": {
              "!type": "fn(status: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#setAutoJoinStatus(int)"
            },
            "isPasspointNetwork": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#isPasspointNetwork()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "is5GHz": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#is5GHz()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "averageRssi": {
              "!type": "fn(previousRssi: number, previousSeen: +java.lang.Long, maxAge: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/ScanResult.html#averageRssi(int, long, int)"
            }
          }
        },
        "WifiNetworkConnectionStatistics": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiNetworkConnectionStatistics.html",
          "!type": "fn(connection: number, usage: number)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiNetworkConnectionStatistics.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiNetworkConnectionStatistics.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiNetworkConnectionStatistics.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiNetworkConnectionStatistics.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "WifiActivityEnergyInfo": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html",
          "!type": "fn(timestamp: +java.lang.Long, stackState: number, txTime: +java.lang.Long, rxTime: +java.lang.Long, idleTime: +java.lang.Long, energyUsed: +java.lang.Long)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#CREATOR"
          },
          "STACK_STATE_STATE_SCANNING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#STACK_STATE_STATE_SCANNING"
          },
          "STACK_STATE_STATE_IDLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#STACK_STATE_STATE_IDLE"
          },
          "STACK_STATE_STATE_ACTIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#STACK_STATE_STATE_ACTIVE"
          },
          "STACK_STATE_INVALID": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#STACK_STATE_INVALID"
          },
          "prototype": {
            "getControllerRxTimeMillis": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#getControllerRxTimeMillis()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#toString()"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getControllerTxTimeMillis": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#getControllerTxTimeMillis()"
            },
            "getControllerEnergyUsed": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#getControllerEnergyUsed()"
            },
            "getStackState": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#getStackState()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getControllerIdleTimeMillis": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#getControllerIdleTimeMillis()"
            },
            "isValid": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#isValid()"
            },
            "getTimeStamp": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiActivityEnergyInfo.html#getTimeStamp()"
            }
          }
        },
        "RttManager": {
          "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html",
          "!type": "fn(context: +android.content.Context, service: IRttManager)",
          "Capabilities": {
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.Capabilities.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "RttCapabilities": {
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.RttCapabilities.html",
            "!type": "fn()",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.RttCapabilities.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.RttCapabilities.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.RttCapabilities.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.RttCapabilities.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "RttParams": {
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.RttParams.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "ParcelableRttParams": {
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttParams.html",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttParams.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttParams.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttParams.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "WifiInformationElement": {
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.WifiInformationElement.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "RttResult": {
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.RttResult.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "ParcelableRttResults": {
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttResults.html",
            "!type": "fn(results: +java.newArray)",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttResults.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttResults.html#describeContents()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.ParcelableRttResults.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "RTT_CHANNEL_WIDTH_UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_UNSPECIFIED"
          },
          "RTT_CHANNEL_WIDTH_160": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_160"
          },
          "RTT_CHANNEL_WIDTH_10": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_10"
          },
          "PREAMBLE_VHT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#PREAMBLE_VHT"
          },
          "RTT_CHANNEL_WIDTH_40": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_40"
          },
          "RTT_TYPE_11_MC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_TYPE_11_MC"
          },
          "RTT_STATUS_NO_WIFI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_NO_WIFI"
          },
          "REASON_NOT_AVAILABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#REASON_NOT_AVAILABLE"
          },
          "RTT_STATUS_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAILURE"
          },
          "RTT_BW_20_SUPPORT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_BW_20_SUPPORT"
          },
          "RTT_STATUS_FAIL_NOT_SCHEDULED_YET": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_NOT_SCHEDULED_YET"
          },
          "CMD_OP_ABORTED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#CMD_OP_ABORTED"
          },
          "RTT_PEER_P2P_GO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_PEER_P2P_GO"
          },
          "RTT_TYPE_11_V": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_TYPE_11_V"
          },
          "RTT_STATUS_FAIL_TM_TIMEOUT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_TM_TIMEOUT"
          },
          "DESCRIPTION_KEY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#DESCRIPTION_KEY"
          },
          "CMD_OP_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#CMD_OP_FAILED"
          },
          "RTT_PEER_NAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_PEER_NAN"
          },
          "RTT_STATUS_FAIL_NO_RSP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_NO_RSP"
          },
          "RTT_STATUS_FAIL_PROTOCOL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_PROTOCOL"
          },
          "RTT_STATUS_FAIL_INVALID_TS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_INVALID_TS"
          },
          "RTT_BW_80_SUPPORT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_BW_80_SUPPORT"
          },
          "RTT_PEER_TYPE_STA": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_PEER_TYPE_STA"
          },
          "RTT_STATUS_FAIL_REJECTED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_REJECTED"
          },
          "RTT_PEER_TYPE_AP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_PEER_TYPE_AP"
          },
          "RTT_STATUS_FAIL_FTM_PARAM_OVERRIDE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_FTM_PARAM_OVERRIDE"
          },
          "REASON_INVALID_REQUEST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#REASON_INVALID_REQUEST"
          },
          "RTT_STATUS_FAIL_SCHEDULE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_SCHEDULE"
          },
          "RTT_TYPE_TWO_SIDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_TYPE_TWO_SIDED"
          },
          "REASON_PERMISSION_DENIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#REASON_PERMISSION_DENIED"
          },
          "RTT_BW_40_SUPPORT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_BW_40_SUPPORT"
          },
          "RTT_BW_5_SUPPORT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_BW_5_SUPPORT"
          },
          "RTT_STATUS_FAIL_NO_CAPABILITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_NO_CAPABILITY"
          },
          "PREAMBLE_LEGACY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#PREAMBLE_LEGACY"
          },
          "RTT_TYPE_ONE_SIDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_TYPE_ONE_SIDED"
          },
          "RTT_PEER_P2P_CLIENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_PEER_P2P_CLIENT"
          },
          "REASON_INVALID_LISTENER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#REASON_INVALID_LISTENER"
          },
          "CMD_OP_STOP_RANGING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#CMD_OP_STOP_RANGING"
          },
          "CMD_OP_START_RANGING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#CMD_OP_START_RANGING"
          },
          "BASE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#BASE"
          },
          "REASON_UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#REASON_UNSPECIFIED"
          },
          "RTT_CHANNEL_WIDTH_20": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_20"
          },
          "RTT_CHANNEL_WIDTH_5": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_5"
          },
          "RTT_PEER_TYPE_UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_PEER_TYPE_UNSPECIFIED"
          },
          "RTT_CHANNEL_WIDTH_80": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_80"
          },
          "PREAMBLE_HT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#PREAMBLE_HT"
          },
          "RTT_STATUS_SUCCESS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_SUCCESS"
          },
          "RTT_STATUS_ABORTED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_ABORTED"
          },
          "RTT_TYPE_UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_TYPE_UNSPECIFIED"
          },
          "RTT_STATUS_FAIL_AP_ON_DIFF_CHANNEL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_AP_ON_DIFF_CHANNEL"
          },
          "RTT_STATUS_FAIL_BUSY_TRY_LATER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_FAIL_BUSY_TRY_LATER"
          },
          "RTT_CHANNEL_WIDTH_80P80": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_CHANNEL_WIDTH_80P80"
          },
          "RTT_BW_10_SUPPORT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_BW_10_SUPPORT"
          },
          "CMD_OP_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#CMD_OP_SUCCEEDED"
          },
          "RTT_STATUS_INVALID_REQ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_STATUS_INVALID_REQ"
          },
          "RTT_BW_160_SUPPORT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#RTT_BW_160_SUPPORT"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "stopRanging": {
              "!type": "fn(listener: +android.net.wifi.RttManager.RttListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#stopRanging(android.net.wifi.RttManager.RttListener)"
            },
            "getRttCapabilities": {
              "!type": "fn() -> +android.net.wifi.RttManager.RttCapabilities",
              "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#getRttCapabilities()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "startRanging": {
              "!type": "fn(params: +java.newArray, listener: +android.net.wifi.RttManager.RttListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#startRanging(android.net.wifi.RttManager.RttParams[], android.net.wifi.RttManager.RttListener)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getCapabilities": {
              "!type": "fn() -> +android.net.wifi.RttManager.Capabilities",
              "!url": "http://developer.android.com/reference/android/net/wifi/RttManager.html#getCapabilities()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "BatchedScanSettings": {
          "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html",
          "!type": "fn()",
          "DEFAULT_SCANS_PER_BATCH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#DEFAULT_SCANS_PER_BATCH"
          },
          "MAX_WIFI_CHANNEL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MAX_WIFI_CHANNEL"
          },
          "MIN_SCANS_PER_BATCH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MIN_SCANS_PER_BATCH"
          },
          "MAX_AP_PER_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MAX_AP_PER_SCAN"
          },
          "DEFAULT_AP_FOR_DISTANCE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#DEFAULT_AP_FOR_DISTANCE"
          },
          "DEFAULT_INTERVAL_SEC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#DEFAULT_INTERVAL_SEC"
          },
          "MIN_AP_FOR_DISTANCE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MIN_AP_FOR_DISTANCE"
          },
          "MAX_SCANS_PER_BATCH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MAX_SCANS_PER_BATCH"
          },
          "DEFAULT_AP_PER_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#DEFAULT_AP_PER_SCAN"
          },
          "MIN_AP_PER_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MIN_AP_PER_SCAN"
          },
          "MAX_AP_FOR_DISTANCE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MAX_AP_FOR_DISTANCE"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#CREATOR"
          },
          "UNSPECIFIED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#UNSPECIFIED"
          },
          "MIN_INTERVAL_SEC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MIN_INTERVAL_SEC"
          },
          "MAX_INTERVAL_SEC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#MAX_INTERVAL_SEC"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "isInvalid": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#isInvalid()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#toString()"
            },
            "equals": {
              "!type": "fn(obj: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "clear": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#clear()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#writeToParcel(android.os.Parcel, int)"
            },
            "constrain": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#constrain()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/BatchedScanSettings.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "WifiManager": {
          "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html",
          "!type": "fn(context: +android.content.Context, service: IWifiManager)",
          "WpsCallback": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WpsCallback.html",
            "!type": "fn()",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "onSucceeded": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WpsCallback.html#onSucceeded()"
              },
              "onFailed": {
                "!type": "fn(reason: number) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WpsCallback.html#onFailed(int)"
              },
              "onStarted": {
                "!type": "fn(pin: string) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WpsCallback.html#onStarted(java.lang.String)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "WifiLock": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "setReferenceCounted": {
                "!type": "fn(refCounted: bool) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html#setReferenceCounted(boolean)"
              },
              "setWorkSource": {
                "!type": "fn(ws: +android.os.WorkSource) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html#setWorkSource(android.os.WorkSource)"
              },
              "acquire": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html#acquire()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "isHeld": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html#isHeld()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "release": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html#release()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "MulticastLock": {
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "setReferenceCounted": {
                "!type": "fn(refCounted: bool) -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#setReferenceCounted(boolean)"
              },
              "acquire": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#acquire()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "isHeld": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#isHeld()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "release": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#release()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "WIFI_CREDENTIAL_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_CREDENTIAL_CHANGED_ACTION"
          },
          "EXTRA_NETWORK_CAPABILITIES": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_NETWORK_CAPABILITIES"
          },
          "CONNECT_NETWORK_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CONNECT_NETWORK_SUCCEEDED"
          },
          "WPS_TKIP_ONLY_PROHIBITED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WPS_TKIP_ONLY_PROHIBITED"
          },
          "START_WPS_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#START_WPS_SUCCEEDED"
          },
          "WIFI_STATE_DISABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_STATE_DISABLED"
          },
          "EXTRA_MULTIPLE_NETWORKS_CHANGED": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_MULTIPLE_NETWORKS_CHANGED"
          },
          "RSSI_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#RSSI_CHANGED_ACTION"
          },
          "EXTRA_WIFI_AP_FAILURE_REASON": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_WIFI_AP_FAILURE_REASON"
          },
          "SAP_START_FAILURE_NO_CHANNEL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SAP_START_FAILURE_NO_CHANNEL"
          },
          "WIFI_AP_STATE_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_AP_STATE_CHANGED_ACTION"
          },
          "CANCEL_WPS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CANCEL_WPS"
          },
          "BUSY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#BUSY"
          },
          "WIFI_FEATURE_MOBILE_HOTSPOT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_MOBILE_HOTSPOT"
          },
          "WPS_AUTH_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WPS_AUTH_FAILURE"
          },
          "FORGET_NETWORK_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#FORGET_NETWORK_FAILED"
          },
          "DATA_ACTIVITY_OUT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DATA_ACTIVITY_OUT"
          },
          "WIFI_CREDENTIAL_FORGOT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_CREDENTIAL_FORGOT"
          },
          "WIFI_FEATURE_D2AP_RTT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_D2AP_RTT"
          },
          "CHANGE_REASON_REMOVED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CHANGE_REASON_REMOVED"
          },
          "CHANGE_REASON_CONFIG_CHANGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CHANGE_REASON_CONFIG_CHANGE"
          },
          "WIFI_FEATURE_P2P": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_P2P"
          },
          "SUPPLICANT_CONNECTION_CHANGE_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SUPPLICANT_CONNECTION_CHANGE_ACTION"
          },
          "WIFI_FEATURE_PASSPOINT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_PASSPOINT"
          },
          "SAVE_NETWORK_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SAVE_NETWORK_FAILED"
          },
          "FORGET_NETWORK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#FORGET_NETWORK"
          },
          "EXTRA_SUPPLICANT_ERROR": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_SUPPLICANT_ERROR"
          },
          "WIFI_STATE_DISABLING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_STATE_DISABLING"
          },
          "WIFI_STATE_ENABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_STATE_ENABLED"
          },
          "DATA_ACTIVITY_NONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DATA_ACTIVITY_NONE"
          },
          "WIFI_FEATURE_TDLS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_TDLS"
          },
          "WIFI_FEATURE_SCANNER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_SCANNER"
          },
          "WIFI_FEATURE_INFRA": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_INFRA"
          },
          "FORGET_NETWORK_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#FORGET_NETWORK_SUCCEEDED"
          },
          "ACTION_PICK_WIFI_NETWORK": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#ACTION_PICK_WIFI_NETWORK"
          },
          "BATCHED_SCAN_RESULTS_AVAILABLE_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#BATCHED_SCAN_RESULTS_AVAILABLE_ACTION"
          },
          "EXTRA_LINK_PROPERTIES": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_LINK_PROPERTIES"
          },
          "LINK_CONFIGURATION_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#LINK_CONFIGURATION_CHANGED_ACTION"
          },
          "EXTRA_WIFI_CREDENTIAL_EVENT_TYPE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_WIFI_CREDENTIAL_EVENT_TYPE"
          },
          "RSSI_PKTCNT_FETCH_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#RSSI_PKTCNT_FETCH_SUCCEEDED"
          },
          "ERROR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#ERROR"
          },
          "EXTRA_CHANGE_REASON": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_CHANGE_REASON"
          },
          "RSSI_PKTCNT_FETCH_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#RSSI_PKTCNT_FETCH_FAILED"
          },
          "SAVE_NETWORK_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SAVE_NETWORK_SUCCEEDED"
          },
          "IN_PROGRESS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#IN_PROGRESS"
          },
          "EXTRA_NETWORK_INFO": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_NETWORK_INFO"
          },
          "WIFI_FEATURE_BATCH_SCAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_BATCH_SCAN"
          },
          "DISABLE_NETWORK_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DISABLE_NETWORK_FAILED"
          },
          "DATA_ACTIVITY_NOTIFICATION": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DATA_ACTIVITY_NOTIFICATION"
          },
          "WPS_OVERLAP_ERROR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WPS_OVERLAP_ERROR"
          },
          "EXTRA_WIFI_INFO": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_WIFI_INFO"
          },
          "DATA_ACTIVITY_IN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DATA_ACTIVITY_IN"
          },
          "WIFI_FREQUENCY_BAND_2GHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FREQUENCY_BAND_2GHZ"
          },
          "WPS_COMPLETED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WPS_COMPLETED"
          },
          "SCAN_RESULTS_AVAILABLE_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SCAN_RESULTS_AVAILABLE_ACTION"
          },
          "EXTRA_PREVIOUS_WIFI_STATE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_PREVIOUS_WIFI_STATE"
          },
          "RSSI_LEVELS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#RSSI_LEVELS"
          },
          "SUPPLICANT_STATE_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SUPPLICANT_STATE_CHANGED_ACTION"
          },
          "WIFI_FREQUENCY_BAND_AUTO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FREQUENCY_BAND_AUTO"
          },
          "NOT_AUTHORIZED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#NOT_AUTHORIZED"
          },
          "DATA_ACTIVITY_INOUT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DATA_ACTIVITY_INOUT"
          },
          "WIFI_FREQUENCY_BAND_5GHZ": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FREQUENCY_BAND_5GHZ"
          },
          "INVALID_ARGS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#INVALID_ARGS"
          },
          "WPS_TIMED_OUT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WPS_TIMED_OUT"
          },
          "EXTRA_NEW_STATE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_NEW_STATE"
          },
          "WIFI_AP_STATE_DISABLING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_AP_STATE_DISABLING"
          },
          "EXTRA_BSSID": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_BSSID"
          },
          "WIFI_AP_STATE_DISABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_AP_STATE_DISABLED"
          },
          "WIFI_FEATURE_ADDITIONAL_STA": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_ADDITIONAL_STA"
          },
          "WIFI_STATE_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_STATE_CHANGED_ACTION"
          },
          "WIFI_MODE_SCAN_ONLY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_MODE_SCAN_ONLY"
          },
          "WIFI_FEATURE_AP_STA": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_AP_STA"
          },
          "WIFI_FEATURE_LOGGER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_LOGGER"
          },
          "WIFI_STATE_ENABLING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_STATE_ENABLING"
          },
          "CONNECT_NETWORK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CONNECT_NETWORK"
          },
          "CHANGE_REASON_ADDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CHANGE_REASON_ADDED"
          },
          "RSSI_PKTCNT_FETCH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#RSSI_PKTCNT_FETCH"
          },
          "WIFI_FEATURE_PNO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_PNO"
          },
          "WIFI_FEATURE_D2D_RTT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_D2D_RTT"
          },
          "WIFI_FEATURE_EPR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_EPR"
          },
          "DISABLE_NETWORK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DISABLE_NETWORK"
          },
          "CANCEL_WPS_SUCCEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CANCEL_WPS_SUCCEDED"
          },
          "WIFI_MODE_FULL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_MODE_FULL"
          },
          "WIFI_FEATURE_HAL_EPNO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_HAL_EPNO"
          },
          "NETWORK_IDS_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#NETWORK_IDS_CHANGED_ACTION"
          },
          "WIFI_FEATURE_LINK_LAYER_STATS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_LINK_LAYER_STATS"
          },
          "WIFI_SCAN_AVAILABLE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_SCAN_AVAILABLE"
          },
          "ERROR_AUTHENTICATING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#ERROR_AUTHENTICATING"
          },
          "EXTRA_SUPPLICANT_CONNECTED": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_SUPPLICANT_CONNECTED"
          },
          "SAP_START_FAILURE_GENERAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SAP_START_FAILURE_GENERAL"
          },
          "EXTRA_RESULTS_UPDATED": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_RESULTS_UPDATED"
          },
          "WPS_WEP_PROHIBITED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WPS_WEP_PROHIBITED"
          },
          "WIFI_FEATURE_TDLS_OFFCHANNEL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_TDLS_OFFCHANNEL"
          },
          "START_WPS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#START_WPS"
          },
          "WIFI_AP_STATE_ENABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_AP_STATE_ENABLED"
          },
          "DISABLE_NETWORK_SUCCEEDED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DISABLE_NETWORK_SUCCEEDED"
          },
          "EXTRA_WIFI_STATE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_WIFI_STATE"
          },
          "EXTRA_WIFI_AP_STATE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_WIFI_AP_STATE"
          },
          "WIFI_AP_STATE_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_AP_STATE_FAILED"
          },
          "WIFI_STATE_UNKNOWN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_STATE_UNKNOWN"
          },
          "SAVE_NETWORK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#SAVE_NETWORK"
          },
          "EXTRA_WIFI_CREDENTIAL_SSID": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_WIFI_CREDENTIAL_SSID"
          },
          "WIFI_FEATURE_NAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_NAN"
          },
          "WIFI_MODE_FULL_HIGH_PERF": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_MODE_FULL_HIGH_PERF"
          },
          "CONNECT_NETWORK_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CONNECT_NETWORK_FAILED"
          },
          "CANCEL_WPS_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CANCEL_WPS_FAILED"
          },
          "NETWORK_STATE_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#NETWORK_STATE_CHANGED_ACTION"
          },
          "EXTRA_WIFI_CONFIGURATION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_WIFI_CONFIGURATION"
          },
          "CONFIGURED_NETWORKS_CHANGED_ACTION": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#CONFIGURED_NETWORKS_CHANGED_ACTION"
          },
          "WIFI_FEATURE_INFRA_5G": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_FEATURE_INFRA_5G"
          },
          "WPS_FAILED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WPS_FAILED"
          },
          "EXTRA_PREVIOUS_WIFI_AP_STATE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_PREVIOUS_WIFI_AP_STATE"
          },
          "WIFI_CREDENTIAL_SAVED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_CREDENTIAL_SAVED"
          },
          "DEFAULT_POOR_NETWORK_AVOIDANCE_ENABLED": {
            "!type": "bool",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#DEFAULT_POOR_NETWORK_AVOIDANCE_ENABLED"
          },
          "EXTRA_SCAN_AVAILABLE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_SCAN_AVAILABLE"
          },
          "ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE"
          },
          "WIFI_AP_STATE_ENABLING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#WIFI_AP_STATE_ENABLING"
          },
          "EXTRA_NEW_RSSI": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#EXTRA_NEW_RSSI"
          },
          "calculateSignalLevel": {
            "!type": "fn(rssi: number, numLevels: number) -> number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#calculateSignalLevel(int, int)"
          },
          "compareSignalLevel": {
            "!type": "fn(rssiA: number, rssiB: number) -> number",
            "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#compareSignalLevel(int, int)"
          },
          "prototype": {
            "setFrequencyBand": {
              "!type": "fn(band: number, persist: bool) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setFrequencyBand(int, boolean)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "removeNetwork": {
              "!type": "fn(netId: number) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#removeNetwork(int)"
            },
            "pollBatchedScan": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#pollBatchedScan()"
            },
            "requestBatchedScan": {
              "!type": "fn(requested: +android.net.wifi.BatchedScanSettings) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#requestBatchedScan(android.net.wifi.BatchedScanSettings)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "setHalBasedAutojoinOffload": {
              "!type": "fn(enabled: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setHalBasedAutojoinOffload(int)"
            },
            "stopWifi": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#stopWifi()"
            },
            "isDualBandSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isDualBandSupported()"
            },
            "getFrequencyBand": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getFrequencyBand()"
            },
            "setWifiApConfiguration": {
              "!type": "fn(wifiConfig: +android.net.wifi.WifiConfiguration) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setWifiApConfiguration(android.net.wifi.WifiConfiguration)"
            },
            "isBatchedScanSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isBatchedScanSupported()"
            },
            "getAllowScansWithTraffic": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getAllowScansWithTraffic()"
            },
            "startWps": {
              "!type": "fn(config: +android.net.wifi.WpsInfo, listener: +android.net.wifi.WifiManager.WpsCallback) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#startWps(android.net.wifi.WpsInfo, android.net.wifi.WifiManager.WpsCallback)"
            },
            "createMulticastLock": {
              "!type": "fn(tag: string) -> +android.net.wifi.WifiManager.MulticastLock",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#createMulticastLock(java.lang.String)"
            },
            "getConfiguredNetworks": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getConfiguredNetworks()"
            },
            "disableEphemeralNetwork": {
              "!type": "fn(SSID: string) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#disableEphemeralNetwork(java.lang.String)"
            },
            "isMulticastEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isMulticastEnabled()"
            },
            "isOffChannelTdlsSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isOffChannelTdlsSupported()"
            },
            "getControllerActivityEnergyInfo": {
              "!type": "fn(updateType: number) -> +android.net.wifi.WifiActivityEnergyInfo",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getControllerActivityEnergyInfo(int)"
            },
            "setCountryCode": {
              "!type": "fn(country: string, persist: bool) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setCountryCode(java.lang.String, boolean)"
            },
            "getConnectionInfo": {
              "!type": "fn() -> +android.net.wifi.WifiInfo",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getConnectionInfo()"
            },
            "isWifiScannerSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isWifiScannerSupported()"
            },
            "setTdlsEnabled": {
              "!type": "fn(remoteIPAddress: +java.net.InetAddress, enable: bool) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setTdlsEnabled(java.net.InetAddress, boolean)"
            },
            "factoryReset": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#factoryReset()"
            },
            "getDhcpInfo": {
              "!type": "fn() -> +android.net.DhcpInfo",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getDhcpInfo()"
            },
            "save": {
              "!type": "fn(config: +android.net.wifi.WifiConfiguration, listener: +android.net.wifi.WifiManager.ActionListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#save(android.net.wifi.WifiConfiguration, android.net.wifi.WifiManager.ActionListener)"
            },
            "isDeviceToDeviceRttSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isDeviceToDeviceRttSupported()"
            },
            "disable": {
              "!type": "fn(netId: number, listener: +android.net.wifi.WifiManager.ActionListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#disable(int, android.net.wifi.WifiManager.ActionListener)"
            },
            "getPrivilegedConfiguredNetworks": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getPrivilegedConfiguredNetworks()"
            },
            "enableVerboseLogging": {
              "!type": "fn(verbose: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#enableVerboseLogging(int)"
            },
            "setTdlsEnabledWithMacAddress": {
              "!type": "fn(remoteMacAddress: string, enable: bool) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setTdlsEnabledWithMacAddress(java.lang.String, boolean)"
            },
            "startScan": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#startScan()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getCountryCode": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getCountryCode()"
            },
            "getVerboseLoggingLevel": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getVerboseLoggingLevel()"
            },
            "getEnableAutoJoinWhenAssociated": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getEnableAutoJoinWhenAssociated()"
            },
            "isPasspointSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isPasspointSupported()"
            },
            "addNetwork": {
              "!type": "fn(config: +android.net.wifi.WifiConfiguration) -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#addNetwork(android.net.wifi.WifiConfiguration)"
            },
            "isEnhancedPowerReportingSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isEnhancedPowerReportingSupported()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setWifiApEnabled": {
              "!type": "fn(wifiConfig: +android.net.wifi.WifiConfiguration, enabled: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setWifiApEnabled(android.net.wifi.WifiConfiguration, boolean)"
            },
            "getMatchingWifiConfig": {
              "!type": "fn(scanResult: +android.net.wifi.ScanResult) -> +android.net.wifi.WifiConfiguration",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getMatchingWifiConfig(android.net.wifi.ScanResult)"
            },
            "isWifiEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isWifiEnabled()"
            },
            "isPortableHotspotSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isPortableHotspotSupported()"
            },
            "startWifi": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#startWifi()"
            },
            "getHalBasedAutojoinOffload": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getHalBasedAutojoinOffload()"
            },
            "isPreferredNetworkOffloadSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isPreferredNetworkOffloadSupported()"
            },
            "enableNetwork": {
              "!type": "fn(netId: number, disableOthers: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#enableNetwork(int, boolean)"
            },
            "clearBlacklist": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#clearBlacklist()"
            },
            "setAllowScansWithTraffic": {
              "!type": "fn(enabled: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setAllowScansWithTraffic(int)"
            },
            "reconnect": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#reconnect()"
            },
            "isP2pSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isP2pSupported()"
            },
            "getWifiApConfiguration": {
              "!type": "fn() -> +android.net.wifi.WifiConfiguration",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getWifiApConfiguration()"
            },
            "enableAutoJoinWhenAssociated": {
              "!type": "fn(enabled: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#enableAutoJoinWhenAssociated(boolean)"
            },
            "addToBlacklist": {
              "!type": "fn(bssid: string) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#addToBlacklist(java.lang.String)"
            },
            "getConfigFile": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getConfigFile()"
            },
            "isAdditionalStaSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isAdditionalStaSupported()"
            },
            "setWifiEnabled": {
              "!type": "fn(enabled: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#setWifiEnabled(boolean)"
            },
            "isNanSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isNanSupported()"
            },
            "startLocationRestrictedScan": {
              "!type": "fn(workSource: +android.os.WorkSource) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#startLocationRestrictedScan(android.os.WorkSource)"
            },
            "createWifiLock": {
              "!type": "fn(lockType: number, tag: string) -> +android.net.wifi.WifiManager.WifiLock",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#createWifiLock(int, java.lang.String)"
            },
            "disableNetwork": {
              "!type": "fn(netId: number) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#disableNetwork(int)"
            },
            "startCustomizedScan": {
              "!type": "fn(requested: +android.net.wifi.ScanSettings) -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#startCustomizedScan(android.net.wifi.ScanSettings)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "disconnect": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#disconnect()"
            },
            "isWifiApEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isWifiApEnabled()"
            },
            "pingSupplicant": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#pingSupplicant()"
            },
            "initializeMulticastFiltering": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#initializeMulticastFiltering()"
            },
            "forget": {
              "!type": "fn(netId: number, listener: +android.net.wifi.WifiManager.ActionListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#forget(int, android.net.wifi.WifiManager.ActionListener)"
            },
            "getWpsNfcConfigurationToken": {
              "!type": "fn(netId: number) -> string",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getWpsNfcConfigurationToken(int)"
            },
            "cancelWps": {
              "!type": "fn(listener: +android.net.wifi.WifiManager.WpsCallback) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#cancelWps(android.net.wifi.WifiManager.WpsCallback)"
            },
            "getChannelList": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getChannelList()"
            },
            "enableAggressiveHandover": {
              "!type": "fn(enabled: number) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#enableAggressiveHandover(int)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "is5GHzBandSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#is5GHzBandSupported()"
            },
            "getWifiApState": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getWifiApState()"
            },
            "buildWifiConfig": {
              "!type": "fn(uriString: string, mimeType: string, data: +java.newArray) -> +android.net.wifi.WifiConfiguration",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#buildWifiConfig(java.lang.String, java.lang.String, byte[])"
            },
            "getWifiState": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getWifiState()"
            },
            "getTxPacketCount": {
              "!type": "fn(listener: +android.net.wifi.WifiManager.TxPacketCountListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getTxPacketCount(android.net.wifi.WifiManager.TxPacketCountListener)"
            },
            "isTdlsSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isTdlsSupported()"
            },
            "getCurrentNetwork": {
              "!type": "fn() -> +android.net.Network",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getCurrentNetwork()"
            },
            "getScanResults": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getScanResults()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "isDeviceToApRttSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isDeviceToApRttSupported()"
            },
            "getAggressiveHandover": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getAggressiveHandover()"
            },
            "getBatchedScanResults": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getBatchedScanResults()"
            },
            "getConnectionStatistics": {
              "!type": "fn() -> +android.net.wifi.WifiConnectionStatistics",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getConnectionStatistics()"
            },
            "connect": {
              "!type": "fn(config: +android.net.wifi.WifiConfiguration, listener: +android.net.wifi.WifiManager.ActionListener) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#connect(android.net.wifi.WifiConfiguration, android.net.wifi.WifiManager.ActionListener)"
            },
            "getWifiServiceMessenger": {
              "!type": "fn() -> +android.os.Messenger",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#getWifiServiceMessenger()"
            },
            "updateNetwork": {
              "!type": "fn(config: +android.net.wifi.WifiConfiguration) -> number",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#updateNetwork(android.net.wifi.WifiConfiguration)"
            },
            "stopBatchedScan": {
              "!type": "fn(requested: +android.net.wifi.BatchedScanSettings) -> void",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#stopBatchedScan(android.net.wifi.BatchedScanSettings)"
            },
            "saveConfiguration": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#saveConfiguration()"
            },
            "reassociate": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#reassociate()"
            },
            "isScanAlwaysAvailable": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/net/wifi/WifiManager.html#isScanAlwaysAvailable()"
            }
          }
        }
      }
    }
  }
}